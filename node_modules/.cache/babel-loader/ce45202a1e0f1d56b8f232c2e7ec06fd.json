{"ast":null,"code":"import _classCallCheck from \"/Users/piusandru/Desktop/REACT/graphql_rev/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/piusandru/Desktop/REACT/graphql_rev/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/piusandru/Desktop/REACT/graphql_rev/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/piusandru/Desktop/REACT/graphql_rev/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/piusandru/Desktop/REACT/graphql_rev/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/piusandru/Desktop/REACT/graphql_rev/src/App.js\";\nimport React, { Component } from 'react';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\nimport Post from './Posts/Post';\nimport Posts from './Posts/Posts';\nimport './App.css'; // setting up client\n\nvar client = new ApolloClient({\n  uri: 'https://api-useast.graphcms.com/v1/cjs43zffl1ixr01gfikmzpp5v/master'\n}); // testing if our client is connected by runnu=ing query out of react\n// client.query({\n//   query: testQuery\n// })\n//   .then(res => console.log(res))\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return (// use ApolloProvider to connected to the client\n        React.createElement(ApolloProvider, {\n          client: client,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, React.createElement(Router, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"App\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, React.createElement(\"header\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: '/',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          className: \"header\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, \"THIS IS GRAPHQL\"))), React.createElement(Switch, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, React.createElement(Route, {\n          exact: true,\n          path: \"/\",\n          component: Posts,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }), React.createElement(Route, {\n          exact: true,\n          path: \"/post/new\",\n          component: NewPost,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }), React.createElement(Route, {\n          path: \"/post/:id\",\n          component: Post,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        })))))\n      );\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/piusandru/Desktop/REACT/graphql_rev/src/App.js"],"names":["React","Component","ApolloClient","ApolloProvider","BrowserRouter","Router","Route","Switch","Link","Post","Posts","client","uri","App","NewPost"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,EAAiDC,IAAjD,QAA6D,kBAA7D;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAO,WAAP,C,CAEA;;AACA,IAAMC,MAAM,GAAG,IAAIT,YAAJ,CAAiB;AAC9BU,EAAAA,GAAG,EAAE;AADyB,CAAjB,CAAf,C,CAKA;AACA;AACA;AACA;AACA;;IAKMC,G;;;;;;;;;;;;;6BACK;AACP,aACE;AACA,4BAAC,cAAD;AAAgB,UAAA,MAAM,EAAEF,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AAAM,UAAA,EAAE,EAAE,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAI,UAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,CADF,CADF,EAME,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,GAAlB;AAAsB,UAAA,SAAS,EAAED,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE,oBAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,WAAlB;AAA8B,UAAA,SAAS,EAAEI,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,EAGE,oBAAC,KAAD;AAAO,UAAA,IAAI,EAAC,WAAZ;AAAwB,UAAA,SAAS,EAAEL,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHF,CANF,CADF,CADF;AAFF;AAmBD;;;;EArBeR,S;;AAwBlB,eAAeY,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\nimport Post from './Posts/Post';\nimport Posts from './Posts/Posts';\nimport './App.css';\n\n// setting up client\nconst client = new ApolloClient({\n  uri: 'https://api-useast.graphcms.com/v1/cjs43zffl1ixr01gfikmzpp5v/master'\n})\n\n\n// testing if our client is connected by runnu=ing query out of react\n// client.query({\n//   query: testQuery\n// })\n//   .then(res => console.log(res))\n\n\n\n\nclass App extends Component {\n  render() {\n    return (\n      // use ApolloProvider to connected to the client\n      <ApolloProvider client={client}>\n        <Router>\n          <div className=\"App\">\n            <header>\n              <Link to={'/'}>\n                <h1 className='header'>THIS IS GRAPHQL</h1>\n              </Link>\n            </header>\n            <Switch>\n              <Route exact path='/' component={Posts} />\n              <Route exact path='/post/new' component={NewPost} />\n              <Route path='/post/:id' component={Post} />\n            </Switch>\n          </div>\n        </Router>\n      </ApolloProvider>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}