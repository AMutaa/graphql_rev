{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/piusandru/Desktop/CODE/REACT/graphql_rev/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _classCallCheck from \"/Users/piusandru/Desktop/CODE/REACT/graphql_rev/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/piusandru/Desktop/CODE/REACT/graphql_rev/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/piusandru/Desktop/CODE/REACT/graphql_rev/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/piusandru/Desktop/CODE/REACT/graphql_rev/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/piusandru/Desktop/CODE/REACT/graphql_rev/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/piusandru/Desktop/CODE/REACT/graphql_rev/src/Posts/Posts.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n query allPosts($skip: Int){\\n  posts(orderBy: createdAt_DESC, first: 3, skip: $skip)  {\\n    id\\n    title\\n    body\\n }\\n}\\n \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component, Fragment } from 'react';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport { Link } from 'react-router-dom'; // Use a Query Component, and render prop to return some data\n\nvar Posts =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Posts, _Component);\n\n  function Posts() {\n    _classCallCheck(this, Posts);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Posts).apply(this, arguments));\n  }\n\n  _createClass(Posts, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, React.createElement(Link, {\n        className: \"button\",\n        to: '/post/new',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, \"New Post\"), React.createElement(\"ol\", {\n        className: \"posts\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, React.createElement(Query, {\n        query: POSTS_QUERY,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, function (_ref) {\n        var loading = _ref.loading,\n            data = _ref.data,\n            fetchMore = _ref.fetchMore;\n        if (loading) return 'Loading...';\n        var posts = data.posts;\n        return React.createElement(Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }, posts.map(function (post) {\n          return React.createElement(\"li\", {\n            key: post.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 21\n            },\n            __self: this\n          }, React.createElement(Link, {\n            to: \"/post/\".concat(post.id),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 22\n            },\n            __self: this\n          }, React.createElement(\"h1\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 23\n            },\n            __self: this\n          }, post.title)));\n        }), React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"button\",\n          onClick: function onClick() {\n            return fetchMore();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, \"Load More\")));\n      })));\n    }\n  }]);\n\n  return Posts;\n}(Component); // writing the first query\n// adjusted query with sorting and pagination\n\n\nexport { Posts as default };\nvar POSTS_QUERY = gql(_templateObject());","map":{"version":3,"sources":["/Users/piusandru/Desktop/CODE/REACT/graphql_rev/src/Posts/Posts.js"],"names":["React","Component","Fragment","Query","gql","Link","Posts","POSTS_QUERY","loading","data","fetchMore","posts","map","post","id","title"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,IAAT,QAAqB,kBAArB,C,CAEA;;IAEqBC,K;;;;;;;;;;;;;6BACV;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,QAAhB;AAAyB,QAAA,EAAE,EAAE,WAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAI,QAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAEC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,gBAAkC;AAAA,YAA/BC,OAA+B,QAA/BA,OAA+B;AAAA,YAAtBC,IAAsB,QAAtBA,IAAsB;AAAA,YAAhBC,SAAgB,QAAhBA,SAAgB;AACjC,YAAIF,OAAJ,EAAa,OAAO,YAAP;AADoB,YAEzBG,KAFyB,GAEfF,IAFe,CAEzBE,KAFyB;AAGjC,eACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGA,KAAK,CAACC,GAAN,CAAU,UAAAC,IAAI;AAAA,iBACb;AAAI,YAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,IAAD;AAAM,YAAA,EAAE,kBAAWD,IAAI,CAACC,EAAhB,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAKD,IAAI,CAACE,KAAV,CADF,CADF,CADa;AAAA,SAAd,CADH,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAI;AAAQ,UAAA,SAAS,EAAC,QAAlB;AAA2B,UAAA,OAAO,EAAE;AAAA,mBAAML,SAAS,EAAf;AAAA,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAJ,CARF,CADF;AAaD,OAjBH,CADF,CAFF,CADF;AA4BD;;;;EA9BgCT,S,GAkCnC;AACA;;;SAnCqBK,K;AAoCrB,IAAMC,WAAW,GAAGH,GAAH,mBAAjB","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport { Link } from 'react-router-dom';\n\n// Use a Query Component, and render prop to return some data\n\nexport default class Posts extends Component {\n  render() {\n    return (\n      <div>\n        <Link className='button' to={'/post/new'}>New Post</Link>\n        <ol className='posts'>\n          <Query query={POSTS_QUERY}>\n            {({ loading, data, fetchMore }) => {\n              if (loading) return 'Loading...';\n              const { posts } = data;\n              return (\n                <Fragment>\n                  {posts.map(post => (\n                    <li key={post.id} >\n                      <Link to={`/post/${post.id}`}>\n                        <h1>{post.title}</h1>\n                      </Link>\n                    </li>\n                  ))}\n                  <li><button className='button' onClick={() => fetchMore()}>Load More</button></li>\n                </Fragment>\n              )\n\n            }}\n\n          </Query>\n        </ol>\n      </div>\n\n    )\n  }\n}\n\n\n// writing the first query\n// adjusted query with sorting and pagination\nconst POSTS_QUERY = gql`\n query allPosts($skip: Int){\n  posts(orderBy: createdAt_DESC, first: 3, skip: $skip)  {\n    id\n    title\n    body\n }\n}\n `"]},"metadata":{},"sourceType":"module"}