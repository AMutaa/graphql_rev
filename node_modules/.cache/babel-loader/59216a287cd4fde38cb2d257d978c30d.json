{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/piusandru/Desktop/CODE/REACT/graphql_rev/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _classCallCheck from \"/Users/piusandru/Desktop/CODE/REACT/graphql_rev/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/piusandru/Desktop/CODE/REACT/graphql_rev/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/piusandru/Desktop/CODE/REACT/graphql_rev/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/piusandru/Desktop/CODE/REACT/graphql_rev/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/piusandru/Desktop/CODE/REACT/graphql_rev/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/piusandru/Desktop/CODE/REACT/graphql_rev/src/Posts/Post.js\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation updatePost($check: Boolean, $id: ID!) {\\n    updatePost(\\n    where: {id: $id}\\n    data: {\\n   CHECK: $check\\n    }) {\\n      title\\n      body\\n      id\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n query post($id: ID!){\\n  post(where: {id: $id} ){\\n    id\\n    title\\n    body\\n  }\\n  isEditMode @client\\n}\\n \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport UpdatePost from './UpdatePost';\nimport EditMode from './EditMode'; // Access to isEditMode\n\nvar Post =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Post, _Component);\n\n  function Post() {\n    _classCallCheck(this, Post);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Post).apply(this, arguments));\n  }\n\n  _createClass(Post, [{\n    key: \"render\",\n    value: function render() {\n      var match = this.props.match;\n      return React.createElement(Query, {\n        query: POST_QUERY,\n        variables: {\n          id: match.params.id\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, function (_ref) {\n        var data = _ref.data,\n            loading = _ref.loading;\n        if (loading) return 'Loading...';\n        var post = data.post,\n            isEditMode = data.isEditMode;\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }, React.createElement(EditMode, {\n          isEditMode: isEditMode,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }), isEditMode ? React.createElement(\"section\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, \"Edit Post\"), React.createElement(UpdatePost, {\n          post: post,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        })) : React.createElement(\"section\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, post.title), React.createElement(\"input\", {\n          type: \"checkbox\",\n          checked: post.checked,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        })));\n      });\n    }\n  }]);\n\n  return Post;\n}(Component);\n\nexport { Post as default };\nvar POST_QUERY = gql(_templateObject());\nvar UPDATE_POST = gql(_templateObject2());","map":{"version":3,"sources":["/Users/piusandru/Desktop/CODE/REACT/graphql_rev/src/Posts/Post.js"],"names":["React","Component","Query","gql","UpdatePost","EditMode","Post","match","props","POST_QUERY","id","params","data","loading","post","isEditMode","title","checked","UPDATE_POST"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB,C,CAGA;;IAEqBC,I;;;;;;;;;;;;;6BACV;AAAA,UACCC,KADD,GACW,KAAKC,KADhB,CACCD,KADD;AAEP,aACE,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAEE,UAAd;AAA0B,QAAA,SAAS,EAAE;AAAEC,UAAAA,EAAE,EAAEH,KAAK,CAACI,MAAN,CAAaD;AAAnB,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,gBAAuB;AAAA,YAApBE,IAAoB,QAApBA,IAAoB;AAAA,YAAdC,OAAc,QAAdA,OAAc;AACtB,YAAIA,OAAJ,EAAa,OAAO,YAAP;AADS,YAEdC,IAFc,GAEOF,IAFP,CAEdE,IAFc;AAAA,YAERC,UAFQ,GAEOH,IAFP,CAERG,UAFQ;AAGtB,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,QAAD;AAAU,UAAA,UAAU,EAAEA,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEGA,UAAU,GACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE,oBAAC,UAAD;AAAY,UAAA,IAAI,EAAED,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,CADS,GAKP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKA,IAAI,CAACE,KAAV,CADF,EAEE;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAuB,UAAA,OAAO,EAAEF,IAAI,CAACG,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,CAPN,CADF;AAeD,OAnBH,CADF;AAwBD;;;;EA3B+BhB,S;;SAAbK,I;AA8BrB,IAAMG,UAAU,GAAGN,GAAH,mBAAhB;AAWA,IAAMe,WAAW,GAAGf,GAAH,oBAAjB","sourcesContent":["import React, { Component } from 'react'\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport UpdatePost from './UpdatePost';\nimport EditMode from './EditMode';\n\n\n// Access to isEditMode\n\nexport default class Post extends Component {\n  render() {\n    const { match } = this.props;\n    return (\n      <Query query={POST_QUERY} variables={{ id: match.params.id }}>\n        {({ data, loading }) => {\n          if (loading) return 'Loading...';\n          const { post, isEditMode } = data;\n          return (\n            <div>\n              <EditMode isEditMode={isEditMode} />\n              {isEditMode ? (\n                <section>\n                  <h1>Edit Post</h1>\n                  <UpdatePost post={post} />\n                </section>) : (\n                  <section>\n                    <h1>{post.title}</h1>\n                    <input type=\"checkbox\" checked={post.checked} />\n                  </section>\n                )}\n            </div>\n          )\n        }\n        }\n      </Query >\n    )\n  }\n}\n\nconst POST_QUERY = gql`\n query post($id: ID!){\n  post(where: {id: $id} ){\n    id\n    title\n    body\n  }\n  isEditMode @client\n}\n `\n\nconst UPDATE_POST = gql`\n  mutation updatePost($check: Boolean, $id: ID!) {\n    updatePost(\n    where: {id: $id}\n    data: {\n   CHECK: $check\n    }) {\n      title\n      body\n      id\n    }\n  }\n`"]},"metadata":{},"sourceType":"module"}