{"ast":null,"code":"var _jsxFileName = \"/Users/piusandru/Desktop/CODE/REACT/graphql_rev/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { persistCache } from 'apollo-cache-persist';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker'; // Local State with Apollo Link State\n\nvar defaultState = {\n  isEditMode: false // create cache with inMemory storage\n\n};\nvar cache = new InMemoryCache();\npersistCache({\n  cache: cache,\n  storage: window.localStorage\n}).then(function () {\n  // setting up client, connecting our site to GraphQL API\n  var client = new ApolloClient({\n    cache: cache,\n    uri: 'https://api-useast.graphcms.com/v1/cjs43zffl1ixr01gfikmzpp5v/master',\n    clientState: {\n      defaults: defaultState,\n      resolvers: {}\n    }\n  });\n  ReactDOM.render(React.createElement(ApolloProvider, {\n    client: client,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(App, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })), document.getElementById('root'));\n  serviceWorker.unregister();\n});","map":{"version":3,"sources":["/Users/piusandru/Desktop/CODE/REACT/graphql_rev/src/index.js"],"names":["React","ReactDOM","InMemoryCache","persistCache","ApolloClient","ApolloProvider","App","serviceWorker","defaultState","isEditMode","cache","storage","window","localStorage","then","client","uri","clientState","defaults","resolvers","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,YAAT,QAA6B,sBAA7B;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B,C,CAGA;;AACA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE,KADO,CAIrB;;AAJqB,CAArB;AAKA,IAAMC,KAAK,GAAG,IAAIR,aAAJ,EAAd;AAEAC,YAAY,CAAC;AACXO,EAAAA,KAAK,EAALA,KADW;AAEXC,EAAAA,OAAO,EAAEC,MAAM,CAACC;AAFL,CAAD,CAAZ,CAGGC,IAHH,CAGQ,YAAM;AAEZ;AACA,MAAMC,MAAM,GAAG,IAAIX,YAAJ,CAAiB;AAC9BM,IAAAA,KAAK,EAALA,KAD8B;AAE9BM,IAAAA,GAAG,EAAE,qEAFyB;AAG9BC,IAAAA,WAAW,EAAE;AACXC,MAAAA,QAAQ,EAAEV,YADC;AAEXW,MAAAA,SAAS,EAAE;AAFA;AAHiB,GAAjB,CAAf;AAUAlB,EAAAA,QAAQ,CAACmB,MAAT,CACE,oBAAC,cAAD;AAAgB,IAAA,MAAM,EAAEL,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIIM,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJJ;AAKAf,EAAAA,aAAa,CAACgB,UAAd;AACD,CAtBD","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { persistCache } from 'apollo-cache-persist'\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n// Local State with Apollo Link State\nconst defaultState = {\n  isEditMode: false\n}\n\n// create cache with inMemory storage\nconst cache = new InMemoryCache();\n\npersistCache({\n  cache,\n  storage: window.localStorage\n}).then(() => {\n\n  // setting up client, connecting our site to GraphQL API\n  const client = new ApolloClient({\n    cache,\n    uri: 'https://api-useast.graphcms.com/v1/cjs43zffl1ixr01gfikmzpp5v/master',\n    clientState: {\n      defaults: defaultState,\n      resolvers: {}\n    }\n  })\n\n\n  ReactDOM.render(\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>\n    , document.getElementById('root'));\n  serviceWorker.unregister();\n})"]},"metadata":{},"sourceType":"module"}