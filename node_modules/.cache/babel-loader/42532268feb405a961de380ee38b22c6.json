{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/piusandru/Desktop/CODE/REACT/graphql_rev/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _classCallCheck from \"/Users/piusandru/Desktop/CODE/REACT/graphql_rev/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/piusandru/Desktop/CODE/REACT/graphql_rev/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/piusandru/Desktop/CODE/REACT/graphql_rev/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/piusandru/Desktop/CODE/REACT/graphql_rev/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/piusandru/Desktop/CODE/REACT/graphql_rev/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/piusandru/Desktop/CODE/REACT/graphql_rev/src/Posts/UpdatePost.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation updatePost($id: ID!, $title: String!, $body: String!) {\\n    updatePost(\\n    where: {id: $id}\\n    data: {\\n    status: PUBLISHED\\n      title: $title\\n      body:  $body\\n    }) {\\n      title\\n      body\\n      id\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport PostForm from './PostForm';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag'; // update Post mutation\n\nvar UpdatePost =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UpdatePost, _Component);\n\n  function UpdatePost() {\n    _classCallCheck(this, UpdatePost);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(UpdatePost).apply(this, arguments));\n  }\n\n  _createClass(UpdatePost, [{\n    key: \"render\",\n    value: function render() {\n      var post = this.props.post;\n      return React.createElement(Mutation, {\n        mutation: UPDATE_POST,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, function (updatePost, result) {\n        var onSuccess = function onSuccess() {\n          return result.client.writeData({\n            isEditMode: false\n          });\n        };\n\n        return React.createElement(PostForm, {\n          post: post,\n          onSuccess: onSuccess,\n          onSubmit: updatePost,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15\n          },\n          __self: this\n        });\n      });\n    }\n  }]);\n\n  return UpdatePost;\n}(Component);\n\nexport { UpdatePost as default };\nvar UPDATE_POST = gql(_templateObject());","map":{"version":3,"sources":["/Users/piusandru/Desktop/CODE/REACT/graphql_rev/src/Posts/UpdatePost.js"],"names":["React","Component","PostForm","Mutation","gql","UpdatePost","post","props","UPDATE_POST","updatePost","result","onSuccess","client","writeData","isEditMode"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB,C,CAEA;;IAEqBC,U;;;;;;;;;;;;;6BACV;AAAA,UACCC,IADD,GACU,KAAKC,KADf,CACCD,IADD;AAEP,aACE,oBAAC,QAAD;AAAU,QAAA,QAAQ,EAAEE,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,UAACC,UAAD,EAAaC,MAAb,EAAwB;AACvB,YAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA,iBAAMD,MAAM,CAACE,MAAP,CAAcC,SAAd,CAAwB;AAAEC,YAAAA,UAAU,EAAE;AAAd,WAAxB,CAAN;AAAA,SAAlB;;AACA,eAAO,oBAAC,QAAD;AAAU,UAAA,IAAI,EAAER,IAAhB;AAAsB,UAAA,SAAS,EAAEK,SAAjC;AAA4C,UAAA,QAAQ,EAAEF,UAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAJH,CADF;AAUD;;;;EAbqCR,S;;SAAnBI,U;AAkBrB,IAAMG,WAAW,GAAGJ,GAAH,mBAAjB","sourcesContent":["import React, { Component } from 'react';\nimport PostForm from './PostForm';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\n\n// update Post mutation\n\nexport default class UpdatePost extends Component {\n  render() {\n    const { post } = this.props;\n    return (\n      <Mutation mutation={UPDATE_POST}>\n        {(updatePost, result) => {\n          const onSuccess = () => result.client.writeData({ isEditMode: false })\n          return <PostForm post={post} onSuccess={onSuccess} onSubmit={updatePost} />\n        }\n\n        }\n      </Mutation>\n    )\n  }\n}\n\n\n\nconst UPDATE_POST = gql`\n  mutation updatePost($id: ID!, $title: String!, $body: String!) {\n    updatePost(\n    where: {id: $id}\n    data: {\n    status: PUBLISHED\n      title: $title\n      body:  $body\n    }) {\n      title\n      body\n      id\n    }\n  }\n`"]},"metadata":{},"sourceType":"module"}